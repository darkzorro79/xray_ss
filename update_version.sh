#!/bin/bash

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

echo -e "${BLUE}üîÑ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≤–µ—Ä—Å–∏–∏ XRay${NC}"
echo "====================================="

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ—Å–ª–µ–¥–Ω–µ–π –≤–µ—Ä—Å–∏–∏ XRay –∏–∑ Docker Hub
get_latest_xray_version() {
    echo "üîç –ü—Ä–æ–≤–µ—Ä—è—é –ø–æ—Å–ª–µ–¥–Ω—é—é –≤–µ—Ä—Å–∏—é XRay..."
    
    # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ —Ç–µ–≥–æ–≤ —Å Docker Hub API
    local api_url="https://registry.hub.docker.com/v2/repositories/teddysun/xray/tags/?page_size=100"
    local latest_version=""
    
    # –ü—ã—Ç–∞–µ–º—Å—è –ø–æ–ª—É—á–∏—Ç—å –≤–µ—Ä—Å–∏–∏ —á–µ—Ä–µ–∑ API
    if latest_version=$(curl -s "$api_url" | grep -o '"name":"[0-9][0-9.]*"' | sed 's/"name":"//g; s/"//g' | sort -V | tail -1 2>/dev/null); then
        if [[ -n "$latest_version" && "$latest_version" =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "‚úÖ –ù–∞–π–¥–µ–Ω–∞ –ø–æ—Å–ª–µ–¥–Ω—è—è –≤–µ—Ä—Å–∏—è: $latest_version"
            echo "$latest_version"
            return 0
        fi
    fi
    
    # Fallback - –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —Ç–µ–∫—É—â—É—é –≤–µ—Ä—Å–∏—é –∏–∑ —à–∞–±–ª–æ–Ω–∞
    local current_version=$(grep -o 'teddysun/xray:[0-9][0-9.]*' templates/docker-compose.yml.template | cut -d: -f2 2>/dev/null || echo "25.8.3")
    echo -e "${YELLOW}‚ö†Ô∏è  –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –ø–æ—Å–ª–µ–¥–Ω—é—é –≤–µ—Ä—Å–∏—é, –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ç–µ–∫—É—â—É—é: $current_version${NC}"
    echo "$current_version"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –≤–µ—Ä—Å–∏–∏ –≤ —à–∞–±–ª–æ–Ω–∞—Ö
update_xray_version() {
    local new_version="$1"
    local current_version=$(grep -o 'teddysun/xray:[0-9][0-9.]*' templates/docker-compose.yml.template | cut -d: -f2 2>/dev/null || echo "25.8.3")
    
    if [[ "$new_version" != "$current_version" ]]; then
        echo -e "${YELLOW}üîÑ –û–±–Ω–æ–≤–ª—è—é –≤–µ—Ä—Å–∏—é —Å $current_version –Ω–∞ $new_version...${NC}"
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ñ–∞–π–ª–æ–≤ —à–∞–±–ª–æ–Ω–æ–≤
        if [[ ! -f "templates/docker-compose.yml.template" ]]; then
            echo -e "${RED}‚ùå –§–∞–π–ª templates/docker-compose.yml.template –Ω–µ –Ω–∞–π–¥–µ–Ω!${NC}"
            return 1
        fi
        
        if [[ ! -f "templates/config.json.template" ]]; then
            echo -e "${RED}‚ùå –§–∞–π–ª templates/config.json.template –Ω–µ –Ω–∞–π–¥–µ–Ω!${NC}"
            return 1
        fi
        
        # –°–æ–∑–¥–∞–µ–º —Ä–µ–∑–µ—Ä–≤–Ω—ã–µ –∫–æ–ø–∏–∏
        cp templates/docker-compose.yml.template templates/docker-compose.yml.template.bak
        cp templates/config.json.template templates/config.json.template.bak
        
        # –û–±–Ω–æ–≤–ª—è–µ–º docker-compose —à–∞–±–ª–æ–Ω
        sed -i "s/teddysun\/xray:$current_version/teddysun\/xray:$new_version/g" templates/docker-compose.yml.template
        
        # –û–±–Ω–æ–≤–ª—è–µ–º config.json —à–∞–±–ª–æ–Ω
        sed -i "s/\"min\": \"$current_version\"/\"min\": \"$new_version\"/g" templates/config.json.template
        
        echo -e "${GREEN}‚úÖ –í–µ—Ä—Å–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∞ –≤ —à–∞–±–ª–æ–Ω–∞—Ö${NC}"
        echo "üìã –û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã:"
        echo "   - templates/docker-compose.yml.template"
        echo "   - templates/config.json.template"
        echo "üìÅ –†–µ–∑–µ—Ä–≤–Ω—ã–µ –∫–æ–ø–∏–∏:"
        echo "   - templates/docker-compose.yml.template.bak"
        echo "   - templates/config.json.template.bak"
        return 0
    else
        echo -e "${GREEN}‚úÖ –í–µ—Ä—Å–∏—è $current_version —É–∂–µ –∞–∫—Ç—É–∞–ª—å–Ω–∞${NC}"
        return 1
    fi
}

# –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ curl
    if ! command -v curl &> /dev/null; then
        echo -e "${RED}‚ùå curl –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!${NC}"
        echo "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –µ–≥–æ –∫–æ–º–∞–Ω–¥–æ–π: sudo apt install -y curl"
        exit 1
    fi
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –º—ã –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
    if [[ ! -d "templates" ]]; then
        echo -e "${RED}‚ùå –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è templates –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!${NC}"
        echo "–ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç –∏–∑ –∫–æ—Ä–Ω—è –ø—Ä–æ–µ–∫—Ç–∞"
        exit 1
    fi
    
    echo "üìã –¢–µ–∫—É—â–∏–µ –≤–µ—Ä—Å–∏–∏:"
    local current_docker=$(grep -o 'teddysun/xray:[0-9][0-9.]*' templates/docker-compose.yml.template | cut -d: -f2 2>/dev/null || echo "–Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
    local current_config=$(grep -o '"min": "[0-9][0-9.]*"' templates/config.json.template | cut -d'"' -f4 2>/dev/null || echo "–Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
    echo "   Docker Compose: $current_docker"
    echo "   Config JSON: $current_config"
    echo
    
    # –ü–æ–ª—É—á–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω—é—é –≤–µ—Ä—Å–∏—é
    local latest_version=$(get_latest_xray_version)
    echo
    
    # –û–±–Ω–æ–≤–ª—è–µ–º –≤–µ—Ä—Å–∏—é
    if update_xray_version "$latest_version"; then
        echo
        echo -e "${GREEN}üéâ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!${NC}"
        echo
        echo "üîÑ –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:"
        echo "1. –û—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ —Ç–µ–∫—É—â–∏–π —Å–µ—Ä–≤–µ—Ä: ./stop.sh"
        echo "2. –ü–µ—Ä–µ–≥–µ–Ω–µ—Ä–∏—Ä—É–π—Ç–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é: ./generate.sh"  
        echo "3. –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–µ—Ä–≤–µ—Ä: ./start.sh"
        echo
        echo "üìù –ò–ª–∏ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ —Å—Ä–∞–∑—É:"
        echo "   ./stop.sh && ./generate.sh && ./start.sh"
    else
        echo
        echo "‚ÑπÔ∏è  –ù–∏–∫–∞–∫–∏—Ö –¥–µ–π—Å—Ç–≤–∏–π –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è"
    fi
}

# –ó–∞–ø—É—Å–∫–∞–µ–º –æ—Å–Ω–æ–≤–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é
main "$@"
